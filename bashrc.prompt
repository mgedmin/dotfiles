# My bash prompt looks like this:
#
#  mg@hostname:/pwd [git:branch] $ command
#  ...command output...
#
#  [exited with 42]
#  mg@hostname:/pwd [git:branch] $
#

# __git_ps1 is defined by /etc/bash_completion.d/git

# svn branch name in shell prompt
# based on /etc/bash_completion.d/git and https://gist.github.com/657287
# (the latter is from http://edgar.tumblr.com/post/1449437754/show-ruby-version-and-svn-git-branch-in-prompt)
# oh and also http://hocuspokus.net/2009/07/add-git-and-svn-branch-to-bash-prompt/
__svn_ps1()
{
    # XXX: svn 1.7 no longer has .svn in every directory
    if [ -d .svn ]; then
        local svn_info="$(svn info | egrep '^URL: ' 2> /dev/null)"
        local branch_pattern="^URL: .*/(branches|tags)/([^/]+)"
        local trunk_pattern="^URL: .*/trunk(/.*)?$"
        local branch=""
        if [[ ${svn_info} =~ $branch_pattern ]]; then
            branch=${BASH_REMATCH[2]}
        elif [[ ${svn_info} =~ $trunk_pattern ]]; then
            branch='trunk'
        fi
        printf -- "${1:- (%s)}" "$branch"
    fi
}

# hg branch name in shell prompt
# based on http://www.amateurinmotion.com/articles/2010/01/28/mercurial-branch-in-bash-prompt.html
# I'm not using http://mercurial.selenic.com/wiki/PromptExtension because fuck
# nonstandard extensions I can't apt-get install; why can't they include this
# in the core?
__hg_ps1()
{
    if [ -x /usr/bin/hg ] && [ -n "$(hg root 2> /dev/null)" ]; then
        printf -- "$1" "$(hg branch)"
    fi
}

# bzr branch name in shell prompt
# based on my __hg_ps1 hack
# because http://martin-ueding.de/computer_stuff/vcs_prompt/de.html is too long
__bzr_ps1()
{
    if [ -x /usr/bin/bzr ] && [ -n "$(bzr --no-plugins root 2> /dev/null)" ]; then
        printf -- "$1" "$(bzr --no-plugins nick)"
    fi
}

# Debian standard stuff that I never actually use
if [ -z "$debian_chroot" -a -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

reset='\[\033[0m\]'
red='\[\033[0;31m\]'
green='\[\033[0;32m\]'
blue='\[\033[0;34m\]'
purple='\[\033[0;35m\]'
grey='\[\033[0;37m\]'
darkgrey='\[\033[1;30m\]'
exitcode="\`__ps_rc=\$?; test \$__ps_rc -ne 0 && echo -ne '\n$grey[exited with $red'\$__ps_rc'$grey]$reset'\`"
chroot='${debian_chroot:+($debian_chroot)}'
svn='$(__svn_ps1 " [svn:%s]")'
git='$(__git_ps1 " [git:%s]")'
hg='$(__hg_ps1 " [hg:%s]")'
bzr='$(__bzr_ps1 " [bzr:%s]")'
njobs='$(n=$(jobs -p); echo "${n:+ \j&}")'
GIT_PS1_SHOWDIRTYSTATE=1     # adds * and/or + if there are changes
GIT_PS1_SHOWSTASHSTATE=1     # adds $ if something is stashed
##GIT_PS1_SHOWUNTRACKEDFILES=1 # adds % if there are untracked files -- slow for large trees!
GIT_PS1_SHOWUPSTREAM="auto"  # < (behind) / > (ahead) / <> (diverged) / = (in sync)
PS1="${exitcode}\n${chroot}${green}\\u@\\h${reset}:${blue}\\w${purple}${svn}${git}${hg}${bzr}${reset}${darkgrey}${njobs}${reset} \\$ "

# vim: ft=sh
